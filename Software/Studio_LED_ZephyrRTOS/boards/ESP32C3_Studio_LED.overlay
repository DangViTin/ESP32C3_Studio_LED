#include <zephyr/dt-bindings/led/led.h>
#include <zephyr/dt-bindings/pwm/pwm.h>
#include <zephyr/dt-bindings/lvgl/lvgl.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
/ {
	aliases {
		led-strip = &led_strip;
		pwm-fan = &ledc0_ch0_gpio5;
	};

	chosen {
		zephyr,display = &ssd1306_ssd1306_128x32;
		zephyr,console = &usb_serial;
		zephyr,shell-uart = &usb_serial;
		// zephyr,rtc = &rtc;
    };

	zephyr,user {
		io-channels =
			<&adc0 3>;	// ADC0, Channel number 3
	};

	pwmfan {
		compatible = "pwm-leds";
		ledc0_ch0_gpio5: ledc0_ch0_gpio5 {
			pwms = <&ledc0 0 100 PWM_POLARITY_NORMAL>;
		};
	};

	buttons: gpio_keys {
		compatible = "gpio-keys";
		user_button0: button_0 {
			label = "User BTN0";
			gpios = <&gpio0 0 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_LEFT>;
		};
		user_button1: button_1 {
			label = "User BTN1";
			gpios = <&gpio0 1 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_RIGHT>;
		};
		user_button2: button_2 {
			label = "User BTN2";
			gpios = <&gpio0 2 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
			zephyr,code = <INPUT_KEY_ENTER>;
		};
	};

	keypad {
        compatible = "zephyr,lvgl-keypad-input";
        input = <&buttons>;
        input-codes = <INPUT_KEY_LEFT INPUT_KEY_RIGHT INPUT_KEY_ENTER>;
        lvgl-codes = <LV_KEY_LEFT LV_KEY_RIGHT LV_KEY_NEXT>;
	};
};

&spi2 {
	dma-enabled;
	/* Workaround to support WS2812 driver */
	line-idle-low;
	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <6400000>;
		/* WS2812 */
		chain-length = <128>; /* arbitrary; change at will */
		spi-cpha;
		spi-one-frame = <0xf0>; /* 11110000: 625 ns high and 625 ns low */
		spi-zero-frame = <0xc0>; /* 11000000: 312.5 ns high and 937.5 ns low */
		color-mapping = <LED_COLOR_ID_GREEN
						LED_COLOR_ID_RED
						LED_COLOR_ID_BLUE>;
	};

	gpio_control {
		compatible = "gpio-leds";
		led_strip_enable: led_strip_enable {
			gpios = <&gpio0 10 GPIO_ACTIVE_HIGH>;
		};
	};
};

&i2c0 {
	clock-frequency = < 400000 >;
	ssd1306_ssd1306_128x32: ssd1306@3c {
		compatible = "solomon,ssd1306fb";
		reg = <0x3c>;
		width = <128>;
		height = <32>;
		segment-offset = <0>;
		page-offset = <0>;
		display-offset = <0>;
		multiplex-ratio = <31>;
		segment-remap;
		com-invdir;
		com-sequential;
		prechargep = <0x22>;
	};
};

&pinctrl {
	spim2_default: spim2_default {
		/delete-property/ group1;	// Delte old prop and insert new one
		group1 {
			pinmux = <SPIM2_MISO_GPIO2>,
				 	<SPIM2_SCLK_GPIO6>;
				//  <SPIM2_CSEL_GPIO10>	// disable this CS pin because this GPIO is used as LED_enable pin
				
		};
		group2 {
			pinmux = <SPIM2_MOSI_GPIO6>;
		};
	};

	i2c0_default: i2c0_default {
		/delete-property/ group1;	// Delte old prop and insert new one
		group1 {
			pinmux = 	<I2C0_SDA_GPIO7>,
						<I2C0_SCL_GPIO8>;
			bias-pull-up;
			drive-open-drain;
			output-high;
		};
	};

	ledc0_default: ledc0_default {
		group1 {
			pinmux = <LEDC_CH0_GPIO5>;
			output-enable;
		};
	};
};

&adc0 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;

	channel@3 {		// Channel number 3
		reg = <3>;	// Channel number 3
		zephyr,gain = "ADC_GAIN_1_4";
		zephyr,reference = "ADC_REF_INTERNAL";
		zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
		zephyr,resolution = <12>;
	};

	gpio_control {
		compatible = "gpio-leds";
		adc0_ch3_enable_pin: adc0_ch3_enable_pin {
			gpios = <&gpio0 9 GPIO_ACTIVE_HIGH>;
		};
	};
};

&ledc0 {
	pinctrl-0 = <&ledc0_default>;
	pinctrl-names = "default";
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	channel0@0 {
		reg = <0x0>;
		timer = <0>;
	};
};

// &rtc {
	// slow-clk-src = < 0x1 >;
	// fast-clk-src = < 0x00 >;
// };

// /delete-property/ property1;
// /delete-node/ node2;